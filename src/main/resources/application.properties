
#==== connect to mysql ======#

spring.datasource.url=jdbc:mysql://localhost:3306/paychec?useUnicode=yes&characterEncoding=UTF-8&useSSL=false
#spring.datasource.url=jdbc:mysql://localhost:3306/paychec
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=false

spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
spring.jpa.properties.javax.persistence.sharedCache.mode=ALL

spring.jackson.serialization-inclusion=non_null
# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
#spring.queries
spring.queries.users-query=select email, password, active from users where email=?
spring.queries.roles-query=select u.email, r.name from users u inner join user_authority ur on(u.id=ur.user_id) inner join authority r on(ur.authority_id=r.id) where u.email=?


server.port = 8080
server.contextPath=/paychec
spring.data.rest.basePath=/api

app.name=paychec

#jwt:
jwt.header: Authorization
jwt.expires_in: 10800000
jwt.mobile_expires_in: 60000 
jwt.secret: paycheck



#logging.level.org.springframework.web=ERROR
#logging.level.com.thinkss=DEBUG
#logging.level.org.hibernate=ERROR
# logging.level.org.springframework=DEBUG------------------

# logging.level.org.apache.http=DEBUG
# logging.level.org.apache.http=DEBUG
# log4j.logger.org.springframework.web.client=DEBUG


 # logging.level.org.apache.http.wire=DEBUG
 
 # logging.level.=DEBUG  ------------------------
 # logging.file= paychec.log
 
 # logging.file=${java.io.tmpdir}/paychec.log

# log4j.logger.httpclient.wire=DEBUG

#spring.http.multipart.maxFileSize = 3Mb

#spring.http.multipart.enabled=true
spring.http.multipart.max-file-size=25MB
# Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.http.multipart.max-request-size=25MB
  # Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.



welcome.message: Hello Raushan

paychec.url :http://185.78.163.41:8080

# spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/image/
 # Locations of static resources.
 
 
 # Email (MailProperties)
# spring.mail.default-encoding=UTF-8 # Default MimeMessage encoding.
# spring.mail.host= smtp.gmail.com
# spring.mail.jndi-name= # Session JNDI name. When set, takes precedence to others mail settings.
# spring.mail.password= # Login password of the SMTP server.
# spring.mail.port= # SMTP server port.
# spring.mail.properties.*= # Additional JavaMail session properties.
# spring.mail.protocol=smtp # Protocol used by the SMTP server.
# spring.mail.test-connection=false # Test that the mail server is available on startup.
# spring.mail.username= # Login user of the SMTP server.
#---------------------------------------------working----------------------------------------------------
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=raushan.jnv@gmail.com
#spring.mail.password=636317636317636317

#------------------------------------------------------------------------------

#spring.mail.host=smtp.office365.com
spring.mail.host=mail.pay-chec.com
spring.mail.port=2525
spring.mail.username=backend-pay-chec
spring.mail.password=Think@12345



 
#mail properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.debug=true
#mail.smtp.ssl.enable "true"
#spring.mail.properties.mail.smtp.ssl.enable = true
#spring.mail.properties.mail.transport.protocol=smtp


spring.mail.properties.mail.smtp.connectiontimeout=50000
spring.mail.properties.mail.smtp.timeout=30000
spring.mail.properties.mail.smtp.writetimeout=50000
#spring.thymeleaf.prefix=classpath:/mails/
#spring.thymeleaf.prefix=classpath:/mails/

#spring.thymeleaf.prefix=classpath:/templates/admin/

#spring.thymeleaf.prefix=classpath:/templates/

#spring.mvc.view.prefix= /WEB-INF/view/admin/
#spring.mvc.view.suffix= .html


# Static resources reloading during development
#spring.resources.static-locations=${project.base-dir}/src/main/resources/static/
#spring.resources.cache-period=0

#spring.devtools.restart.exclude=static/**,templates/*


#spring.devtools.restart.exclude=static/**,public/**

spring.resources.static-locations[0]=file:src/main/resources/static/
spring.resources.static-locations[1]=classpath:/static/
#spring.resources.static-locations[2]=file:src/main/resources/static/resources

#security.ignored=/css/**,/js/**,/images/**,/font-awesome/**


org.quartz.scheduler.instanceName=spring-boot-quartz-demo
org.quartz.scheduler.instanceId=AUTO
org.quartz.threadPool.threadCount=5

job.startDelay= 5000000
job.repeatInterval = 8000


#management.security.enabled: FALSE 

